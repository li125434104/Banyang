//
//  UIColor+OCAdditions.m
//  Ocarina
//
//  Created by CAI on 13-6-21.
//  Copyright (c) 2013å¹´ CAI. All rights reserved.
//

#import "UIColor+OCAdditions.h"
#import "Ocarina.h"

@implementation UIColor (OCAdditions)

+ (UIColor *)randomColor {
	return [UIColor colorWithRed:RANDOM_F() green:RANDOM_F() blue:RANDOM_F() alpha:1];
}

+ (UIColor *)colorWithHex:(int)hex {
    return [UIColor colorWithRed:((hex & 0xFF0000) >> 16) / 255.0
                           green:((hex & 0xFF00) >> 8) / 255.0
                            blue:(hex & 0xFF) / 255.0
                           alpha:1];
}

+ (UIColor *)colorWithR:(int)r G:(int)g B:(int)b A:(float)a {
    return COLOR_RGBA(r, g, b, a);
}

+ (UIColor *)colorWithR:(int)r G:(int)g B:(int)b {
    return COLOR_RGB(r, g, b);
}

+ (UIColor *)colorWithRGBString:(NSString *)rgbString {
    NSArray *components = [rgbString componentsSeparatedByString:@","];
    if (components.count < 3)
        return nil;
    
    int r = [components[0] intValue];
    int g = [components[1] intValue];
    int b = [components[2] intValue];
    int a = 255;
    
    if (components.count >= 4)
        a = [components[3] intValue];
    
    return [self colorWithR:r G:g B:b A:a / 255.0];
}


- (CGFloat)r {
    const CGFloat *components = CGColorGetComponents(self.CGColor);
    return components[0];
}

- (CGFloat)g {
    const CGFloat *components = CGColorGetComponents(self.CGColor);
    return components[1];
}

- (CGFloat)b {
    const CGFloat *components = CGColorGetComponents(self.CGColor);
    return components[2];
}

- (CGFloat)a {
    return CGColorGetAlpha(self.CGColor);
}

- (UIColor *)highlightedColor {
    const CGFloat *components = CGColorGetComponents(self.CGColor);
    CGFloat r = components[0];
    CGFloat g = components[1];
    CGFloat b = components[2];
    CGFloat a = components[3];
    
    CGFloat dimRatio = 0.8;
    return [UIColor colorWithRed:r * dimRatio green:g * dimRatio blue:b * dimRatio alpha:a];
}

- (NSString *)rgbString {
    const CGFloat *components = CGColorGetComponents(self.CGColor);
    CGFloat r = components[0];
    CGFloat g = components[1];
    CGFloat b = components[2];
    
    return [NSString stringWithFormat:@"%d,%d,%d",
            (int)(r * 255),
            (int)(g * 255),
            (int)(b * 255)];
}

- (NSString *)hexString {
    return nil;
}


@end
